PUSH_SYMINT_0
OP_DUP OP_PUSHBYTES_4 ffffff3f OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_4 00000040 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_4 ffffff1f OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_4 00000020 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_4 ffffff0f OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_4 00000010 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_4 ffffff07 OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_4 00000008 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_4 ffffff03 OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_4 00000004 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_4 ffffff01 OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_4 00000002 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_4 ffffff00 OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_4 00000001 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_3 ffff7f OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_4 00008000 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_3 ffff3f OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_3 000040 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_3 ffff1f OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_3 000020 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_3 ffff0f OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_3 000010 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_3 ffff07 OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_3 000008 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_3 ffff03 OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_3 000004 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_3 ffff01 OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_3 000002 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_3 ffff00 OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_3 000001 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_2 ff7f OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_3 008000 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_2 ff3f OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_2 0040 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_2 ff1f OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_2 0020 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_2 ff0f OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_2 0010 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_2 ff07 OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_2 0008 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_2 ff03 OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_2 0004 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_2 ff01 OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_2 0002 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_2 ff00 OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_2 0001 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_1 7f OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_2 8000 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_1 3f OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_1 40 OP_SUB OP_ENDIF
OP_DUP OP_PUSHBYTES_1 1f OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHBYTES_1 20 OP_SUB OP_ENDIF
OP_DUP OP_PUSHNUM_15 OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHNUM_16 OP_SUB OP_ENDIF
OP_DUP OP_PUSHNUM_7 OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHNUM_8 OP_SUB OP_ENDIF
OP_DUP OP_PUSHNUM_3 OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHNUM_4 OP_SUB OP_ENDIF
OP_DUP OP_PUSHNUM_1 OP_GREATERTHAN OP_SWAP OP_OVER OP_IF OP_PUSHNUM_2 OP_SUB OP_ENDIF
ASSUME_0 { ((v0 >= 0) && (v0 < 2147483648)) }
ASSERT_1 { ((((((((((((((((((((((((((((((((0 + (stack[0] * 1)) + (stack[1] * 2)) + (stack[2] * 4)) + (stack[3] * 8)) + (stack[4] * 16)) + (stack[5] * 32)) + (stack[6] * 64)) + (stack[7] * 128)) + (stack[8] * 256)) + (stack[9] * 512)) + (stack[10] * 1024)) + (stack[11] * 2048)) + (stack[12] * 4096)) + (stack[13] * 8192)) + (stack[14] * 16384)) + (stack[15] * 32768)) + (stack[16] * 65536)) + (stack[17] * 131072)) + (stack[18] * 262144)) + (stack[19] * 524288)) + (stack[20] * 1048576)) + (stack[21] * 2097152)) + (stack[22] * 4194304)) + (stack[23] * 8388608)) + (stack[24] * 16777216)) + (stack[25] * 33554432)) + (stack[26] * 67108864)) + (stack[27] * 134217728)) + (stack[28] * 268435456)) + (stack[29] * 536870912)) + (stack[30] * 1073741824)) == v0) }
ASSERT_0 { ((stack[0] >= 0) && (stack[0] < 2)) }
ASSERT_1 { ((stack[1] >= 0) && (stack[1] < 2)) }
ASSERT_2 { ((stack[2] >= 0) && (stack[2] < 2)) }
ASSERT_3 { ((stack[3] >= 0) && (stack[3] < 2)) }
ASSERT_4 { ((stack[4] >= 0) && (stack[4] < 2)) }
ASSERT_5 { ((stack[5] >= 0) && (stack[5] < 2)) }
ASSERT_6 { ((stack[6] >= 0) && (stack[6] < 2)) }
ASSERT_7 { ((stack[7] >= 0) && (stack[7] < 2)) }
ASSERT_8 { ((stack[8] >= 0) && (stack[8] < 2)) }
ASSERT_9 { ((stack[9] >= 0) && (stack[9] < 2)) }
ASSERT_10 { ((stack[10] >= 0) && (stack[10] < 2)) }
ASSERT_11 { ((stack[11] >= 0) && (stack[11] < 2)) }
ASSERT_12 { ((stack[12] >= 0) && (stack[12] < 2)) }
ASSERT_13 { ((stack[13] >= 0) && (stack[13] < 2)) }
ASSERT_14 { ((stack[14] >= 0) && (stack[14] < 2)) }
ASSERT_15 { ((stack[15] >= 0) && (stack[15] < 2)) }
ASSERT_16 { ((stack[16] >= 0) && (stack[16] < 2)) }
ASSERT_17 { ((stack[17] >= 0) && (stack[17] < 2)) }
ASSERT_18 { ((stack[18] >= 0) && (stack[18] < 2)) }
ASSERT_19 { ((stack[19] >= 0) && (stack[19] < 2)) }
ASSERT_20 { ((stack[20] >= 0) && (stack[20] < 2)) }
ASSERT_21 { ((stack[21] >= 0) && (stack[21] < 2)) }
ASSERT_22 { ((stack[22] >= 0) && (stack[22] < 2)) }
ASSERT_23 { ((stack[23] >= 0) && (stack[23] < 2)) }
ASSERT_24 { ((stack[24] >= 0) && (stack[24] < 2)) }
ASSERT_25 { ((stack[25] >= 0) && (stack[25] < 2)) }
ASSERT_26 { ((stack[26] >= 0) && (stack[26] < 2)) }
ASSERT_27 { ((stack[27] >= 0) && (stack[27] < 2)) }
ASSERT_28 { ((stack[28] >= 0) && (stack[28] < 2)) }
ASSERT_29 { ((stack[29] >= 0) && (stack[29] < 2)) }
ASSERT_30 { ((stack[30] >= 0) && (stack[30] < 2)) }
