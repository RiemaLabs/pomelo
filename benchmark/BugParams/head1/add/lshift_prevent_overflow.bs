PUSH_BIGINT_0 254 29 limbs0
OP_PUSHBYTES_4 00000020
OP_SWAP
OP_PUSHNUM_1 OP_ROLL
OP_PUSHNUM_1 OP_ROLL
OP_PUSHNUM_1 OP_ROLL
OP_PUSHNUM_1 OP_ROLL
OP_PUSHNUM_1 OP_ROLL
OP_PUSHNUM_1 OP_ROLL
OP_PUSHNUM_1 OP_ROLL
OP_DROP
OP_0 OP_ROLL OP_PUSHBYTES_3 000020 OP_DUP OP_TOALTSTACK OP_2DUP OP_LESSTHAN OP_IF OP_NOT OP_ENDIF OP_DUP OP_ADD OP_SUB
OP_FROMALTSTACK OP_OVER OP_2DUP OP_SWAP OP_DUP OP_NEGATE OP_SWAP OP_WITHIN OP_VERIFY OP_0 OP_GREATERTHANOREQUAL OP_IF OP_NOT OP_ENDIF OP_DUP OP_ADD OP_ADD
OP_FROMALTSTACK
OP_FROMALTSTACK
OP_FROMALTSTACK
OP_FROMALTSTACK
OP_FROMALTSTACK
OP_FROMALTSTACK
OP_FROMALTSTACK
OP_FROMALTSTACK
ASSERT_0 { (stack[0] == (0 + ((limbs0[0] - ((limbs0[0] >> 29) << 29)) << 0))) }
ASSERT_1 { (stack[1] == ((0 + (limbs0[0] >> 29)) + ((limbs0[1] - ((limbs0[1] >> 29) << 29)) << 0))) }
ASSERT_2 { (stack[2] == ((0 + (limbs0[1] >> 29)) + ((limbs0[2] - ((limbs0[2] >> 29) << 29)) << 0))) }
ASSERT_3 { (stack[3] == ((0 + (limbs0[2] >> 29)) + ((limbs0[3] - ((limbs0[3] >> 29) << 29)) << 0))) }
ASSERT_4 { (stack[4] == ((0 + (limbs0[3] >> 29)) + ((limbs0[4] - ((limbs0[4] >> 29) << 29)) << 0))) }
ASSERT_5 { (stack[5] == ((0 + (limbs0[4] >> 29)) + ((limbs0[5] - ((limbs0[5] >> 29) << 29)) << 0))) }
ASSERT_6 { (stack[6] == ((0 + (limbs0[5] >> 29)) + ((limbs0[6] - ((limbs0[6] >> 29) << 29)) << 0))) }
ASSERT_7 { (stack[7] == ((0 + (limbs0[6] >> 29)) + ((limbs0[7] - ((limbs0[7] >> 29) << 29)) << 0))) }
ASSERT_8 { (stack[8] == ((0 + (limbs0[7] >> 29)) + ((limbs0[8] - ((limbs0[8] >> 22) << 22)) << 0))) }
ASSERT_9 { (limbs0[8] <= 4194304) }
